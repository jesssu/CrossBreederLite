#!/system/bin/sh 
echo "" >> /data/cb_CHECK_PROCS.log
echo "CrossBreeder Lite Version 1.7.3" >> /data/cb_CHECK_PROCS.log
echo "" >> /data/cb_CHECK_PROCS.log
echo $(export TZ=GMT; date) >> /data/cb_CHECK_PROCS.log
echo "" >> /data/cb_CHECK_PROCS.log
echo "Checking device info..." >> /data/cb_CHECK_PROCS.log
echo "" >> /data/cb_CHECK_PROCS.log
getprop | busybox egrep -i "build|product" >> /data/cb_CHECK_PROCS.log
echo "" >> /data/cb_CHECK_PROCS.log

XRANDOM="$(busybox cat /data/CrossBreeder/zzCrossBreeder/RANDOM)"
ENTROPY="$(busybox cat /data/CrossBreeder/zzCrossBreeder/ENTROPY)"
DNS="$(busybox cat /data/CrossBreeder/zzCHECK_NET_DNS/DNS)"
SERVER="$(busybox cat /data/CrossBreeder/zzCHECK_NET_DNS/SERVER)"

if [ "$XRANDOM" = "1" ]; then

while [ ! -f /dev/random.MOD ]; do
sleep 1
done

exec 1>/data/random.log 2>&1

echo ""
echo "Random Tweak Status :"
echo ""
echo "Testing urandom with 10MB test..."
busybox time busybox head -c 10m /dev/urandom > /dev/null
echo "Testing urandom with 20MB test..."
busybox time busybox head -c 20m /dev/urandom > /dev/null
if [ -f /dev/frandom ];then
echo ""
echo "Testing frandom with 10MB test..."
busybox time busybox head -c 10m /dev/frandom
echo "Testing frandom with 20MB test..."
busybox time busybox head -c 20m /dev/frandom
else
echo ""
echo "frandom not support"
fi
echo ""

while [ ! -f /data/random.log ]; do
sleep 1
done

echo $(busybox cat /data/random.log) >> /data/cb_CHECK_PROCS.log
rm -f /data/random.log
echo "" >> /data/cb_CHECK_PROCS.log

fi

if [ "$ENTROPY" = "1" ]; then

exec 1>/data/entropy.log 2>&1

echo ""
echo "Entropy Tweak Status :"
echo ""
echo $(for i in [1 2 3 4 5 6 7 8 9 10]; do cat /proc/sys/kernel/random/entropy_avail; sleep 1; done)
echo $(stat /proc/sys/kernel/random/read_wakeup_threshold)

while [ ! -f /data/entropy.log ]; do
sleep 1
done

echo $(busybox cat /data/entropy.log) >> /data/cb_CHECK_PROCS.log
rm -f /data/entropy.log
echo "" >> /data/cb_CHECK_PROCS.log

fi

if [ "$DNS" = "1" ]; then

exec 1>/dev/null 2>&1

while [ ! -f /data/DNSMasq.log ]; do
sleep 1
done

if [ "$SERVER" = "1" ]; then
echo "DNS Server=Google Public DNS" >> /data/cb_CHECK_PROCS.log
elif [ "$SERVER" = "2" ]; then
echo "DNS Server=OPEN DNS" >> /data/cb_CHECK_PROCS.log
elif [ "$SERVER" = "3" ]; then
echo "DNS Server=DNS.WATCH" >> /data/cb_CHECK_PROCS.log
elif [ "$SERVER" = "4" ]; then
echo "DNS Server=Norton Connect Safe" >> /data/cb_CHECK_PROCS.log
elif [ "$SERVER" = "5" ]; then
echo "DNS Server=Level 3" >> /data/cb_CHECK_PROCS.log
elif [ "$SERVER" = "6" ]; then
echo "DNS Server=Comodo Secure DNS" >> /data/cb_CHECK_PROCS.log
elif [ "$SERVER" = "7" ]; then
echo "DNS Server=DNS Advantage" >> /data/cb_CHECK_PROCS.log
elif [ "$SERVER" = "8" ]; then
echo "DNS Server=Safe DNS" >> /data/cb_CHECK_PROCS.log
elif [ "$SERVER" = "9" ]; then
echo "DNS Server=OPEN NIC" >> /data/cb_CHECK_PROCS.log
fi
echo "" >> /data/cb_CHECK_PROCS.log
echo "Dnsmasq_dhcp not support X86, try dnsmasq" >> /data/cb_CHECK_PROCS.log
echo "" >> /data/cb_CHECK_PROCS.log
echo $(busybox cat /data/DNSMasq.log) >> /data/cb_CHECK_PROCS.log
rm -f /data/DNSMasq.log

fi

