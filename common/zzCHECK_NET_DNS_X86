#!/system/bin/sh

export PATH=/system/etc/CrossBreeder:$PATH:/sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin:

TCP="$(busybox cat /data/CrossBreeder/zzCHECK_NET_DNS/TCP)"
DNS="$(busybox cat /data/CrossBreeder/zzCHECK_NET_DNS/DNS)"
SERVER="$(busybox cat /data/CrossBreeder/zzCHECK_NET_DNS/SERVER)"

if [ "$SERVER" = "1" ]; then
DNS1="8.8.8.8"
DNS2="8.8.4.4"
elif [ "$SERVER" = "2" ]; then
DNS1="208.67.222.222"
DNS2="208.67.220.220"
elif [ "$SERVER" = "3" ]; then
DNS1="84.200.69.80"
DNS2="84.200.70.40"
elif [ "$SERVER" = "4" ]; then
DNS1="199.85.126.10"
DNS2="199.85.127.10"
elif [ "$SERVER" = "5" ]; then
DNS1="209.244.0.3"
DNS2="209.244.0.4"
elif [ "$SERVER" = "6" ]; then
DNS1="8.26.56.26"
DNS2="8.20.247.20"
elif [ "$SERVER" = "7" ]; then
DNS1="156.154.70.1"
DNS2="156.154.71.1"
elif [ "$SERVER" = "8" ]; then
DNS1="195.46.39.39"
DNS2="159.46.39.40"
elif [ "$SERVER" = "9" ]; then
DNS1="46.151.208.154"
DNS2="128.199.248.105"
fi

set +e

if [ "$TCP" = "1" ]; then

busybox echo "Optimizing TCP parameters..." >> /data/cb_CHECK_PROCS.log
sleep 1

busybox echo 873200 > /proc/sys/net/core/wmem_max
busybox echo 873200 > /proc/sys/net/core/rmem_max
busybox echo "8192 436600 873200" > /proc/sys/net/ipv4/tcp_wmem
busybox echo "32768 436600 873200" > /proc/sys/net/ipv4/tcp_rmem
busybox echo "786432 1048576 1572864" > /proc/sys/net/ipv4/tcp_mem
busybox echo 3000 > /proc/sys/net/core/netdev_max_backlog
busybox echo 2000 > /proc/sys/net/core/somaxconn
busybox echo 4000 > /proc/sys/net/core/tcp_max_syn_backlog

busybox echo "Optimizing network parameters..." >> /data/cb_CHECK_PROCS.log
sleep 1

busybox sysctl -w net.ipv4.tcp_congestion_control=reno
busybox sysctl -w net.ipv4.tcp_congestion_control=westwood
busybox sysctl -w net.ipv4.tcp_tw_recycle=1
busybox sysctl -w net.ipv4.tcp_tw_reuse=1
busybox sysctl -w net.ipv4.tcp_fin_timeout=600
busybox sysctl -w net.ipv4.tcp_keepalive_intvl=60
busybox sysctl -w net.ipv4.tcp_keepalive_probes=5
busybox sysctl -w net.ipv4.tcp_keepalive_time=300
busybox sysctl -w net.ipv4.tcp_moderate_rcvbuf=1
busybox sysctl -w net.ipv4.tcp_low_latency=0
busybox sysctl -w net.ipv4.tcp_slow_start_after_idle=0
busybox sysctl -w net.ipv4.tcp_timestamps=1
busybox sysctl -w net.ipv4.tcp_window_scaling=1
busybox sysctl -w net.ipv4.icmp_echo_ignore_all=1
busybox sysctl -w net.ipv4.tcp_sack=1
busybox sysctl -w net.ipv4.tcp_fack=1;
busybox sysctl -w net.ipv4.tcp_synack_retries=3;
busybox sysctl -w net.ipv4.tcp_challenge_ack_limit=999;
busybox sysctl -w net.ipv4.conf.all.rp_filter=2;
busybox sysctl -w net.ipv4.conf.default.rp_filter=2;
busybox sysctl -w net.ipv4.tcp_no_metrics_save=1;

fi

if [ "$DNS" = "1" ]; then

( busybox kill -9 $(busybox pgrep -f dnsmasq) )&

exec 1>/data/DNSMasq.log 2>&1

( dnsmasq --no-daemon --port=10054 --all-servers --server=/bit/178.63.16.21,/bit/95.211.195.245,/bit/178.32.31.41 --no-resolv --user=root --pid-file=/data/dnsmasq.pid --listen-address=127.0.0.3 --bind-interfaces --cache-size=0 --no-negcache --server=$DNS1 --server=$DNS2 )&
pid=$!
busybox renice +20 $pid 2>/dev/null
settings put global tether_dun_required 0;

fi
